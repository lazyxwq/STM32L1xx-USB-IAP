; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm32l152-eval\main.o --asm_dir=.\STM32L152-EVAL\ --list_dir=.\STM32L152-EVAL\ --depend=.\stm32l152-eval\main.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\utility -I..\User\inc -I..\Libraries\CMSIS\Include -I..\Libraries\CMSIS\Device\ST\STM32L1xx\Include -I..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\Libraries\STM32L1xx_StdPeriph_Driver\inc -I"E:\my code\IAP\DFU-STM32L15X\MDK-ARM\RTE" -IC:\Keil_v5\ARM\PACK\Keil\STM32L1xx_DFP\1.0.2\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -DSTM32L1XX_MD -DUSE_STDPERIPH_DRIVER -DSTM32L1XX_MD -DUSE_STM32L152_EVAL --omf_browse=.\stm32l152-eval\main.crf ..\User\src\main.c]
                          THUMB

                          AREA ||i.DispSysInfo||, CODE, READONLY, ALIGN=2

                  DispSysInfo PROC
;;;51     
;;;52     void DispSysInfo(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54     	xputs("\r\n");	
000002  a011              ADR      r0,|L1.72|
000004  f7fffffe          BL       xputs
;;;55     	xputs("**********************************************************\r\n");
000008  a010              ADR      r0,|L1.76|
00000a  f7fffffe          BL       xputs
;;;56         xputs("*\r\n");	
00000e  a01f              ADR      r0,|L1.140|
000010  f7fffffe          BL       xputs
;;;57     	xputs("*          ARMILA RECEIVER USB IAP ");
000014  a01e              ADR      r0,|L1.144|
000016  f7fffffe          BL       xputs
;;;58         xputs("\r\n*\r\n");	
00001a  a026              ADR      r0,|L1.180|
00001c  f7fffffe          BL       xputs
;;;59         xputs("*          Build date:");
000020  a026              ADR      r0,|L1.188|
000022  f7fffffe          BL       xputs
;;;60     	xputs(__DATE__);
000026  a02b              ADR      r0,|L1.212|
000028  f7fffffe          BL       xputs
;;;61     	xputc('-');
00002c  202d              MOVS     r0,#0x2d
00002e  f7fffffe          BL       xputc
;;;62     	xputs(__TIME__);
000032  a02b              ADR      r0,|L1.224|
000034  f7fffffe          BL       xputs
;;;63         xputs("\r\n*\r\n");
000038  a01e              ADR      r0,|L1.180|
00003a  f7fffffe          BL       xputs
;;;64     	xputs("**********************************************************\r\n\r\n");	
00003e  e8bd4010          POP      {r4,lr}
000042  a02a              ADR      r0,|L1.236|
000044  f7ffbffe          B.W      xputs
;;;65     }
;;;66     
                          ENDP

                  |L1.72|
000048  0d0a00            DCB      "\r\n",0
00004b  00                DCB      0
                  |L1.76|
00004c  2a2a2a2a          DCB      "*******************************************************"
000050  2a2a2a2a
000054  2a2a2a2a
000058  2a2a2a2a
00005c  2a2a2a2a
000060  2a2a2a2a
000064  2a2a2a2a
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a2a
000078  2a2a2a2a
00007c  2a2a2a2a
000080  2a2a2a  
000083  2a2a2a0d          DCB      "***\r\n",0
000087  0a00    
000089  00                DCB      0
00008a  00                DCB      0
00008b  00                DCB      0
                  |L1.140|
00008c  2a0d0a00          DCB      "*\r\n",0
                  |L1.144|
000090  2a202020          DCB      "*          ARMILA RECEIVER USB IAP ",0
000094  20202020
000098  20202041
00009c  524d494c
0000a0  41205245
0000a4  43454956
0000a8  45522055
0000ac  53422049
0000b0  41502000
                  |L1.180|
0000b4  0d0a2a0d          DCB      "\r\n*\r\n",0
0000b8  0a00    
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L1.188|
0000bc  2a202020          DCB      "*          Build date:",0
0000c0  20202020
0000c4  20202042
0000c8  75696c64
0000cc  20646174
0000d0  653a00  
0000d3  00                DCB      0
                  |L1.212|
0000d4  41756720          DCB      "Aug  8 2016",0
0000d8  20382032
0000dc  30313600
                  |L1.224|
0000e0  31353a30          DCB      "15:01:38",0
0000e4  313a3338
0000e8  00      
0000e9  00                DCB      0
0000ea  00                DCB      0
0000eb  00                DCB      0
                  |L1.236|
0000ec  2a2a2a2a          DCB      "*******************************************************"
0000f0  2a2a2a2a
0000f4  2a2a2a2a
0000f8  2a2a2a2a
0000fc  2a2a2a2a
000100  2a2a2a2a
000104  2a2a2a2a
000108  2a2a2a2a
00010c  2a2a2a2a
000110  2a2a2a2a
000114  2a2a2a2a
000118  2a2a2a2a
00011c  2a2a2a2a
000120  2a2a2a  
000123  2a2a2a0d          DCB      "***\r\n\r\n",0
000127  0a0d0a00
00012b  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;73     *******************************************************************************/
;;;74     int main(void)
000000  f7fffffe          BL       DFU_Button_Config
;;;75     {
;;;76     	uint8_t ret;
;;;77     	uint32_t i;
;;;78     	
;;;79     	DFU_Button_Config();
;;;80     	USART1_init();
000004  f7fffffe          BL       USART1_init
;;;81     	DispSysInfo();
000008  f7fffffe          BL       DispSysInfo
;;;82     
;;;83     	/* Check if the Key push-button on STM3210x-EVAL Board is pressed */
;;;84     	ret = DFU_Button_Read();
00000c  f7fffffe          BL       DFU_Button_Read
000010  4605              MOV      r5,r0
;;;85     	xprintf("DFU button state:%d \r\n", ret);
000012  4601              MOV      r1,r0
000014  a015              ADR      r0,|L2.108|
000016  f7fffffe          BL       xprintf
;;;86     	
;;;87     	if (ret != 0)
;;;88     	{ 
;;;89     		/* Test if user code is programmed starting from address 0x8003000 */
;;;90     		if (((*(__IO uint32_t*)ApplicationAddress) & 0x2FFE0000 ) == 0x20000000)
;;;91     		{
;;;92     			/* Jump to user application */
;;;93     			xputs("Jump to user application \r\n");
;;;94     			i = 0;
;;;95     			while(i < 6000)
;;;96     			{
;;;97     				i++;
;;;98     			}
;;;99     			
;;;100    			JumpAddress = *(__IO uint32_t*) (ApplicationAddress + 4);
00001a  4c1a              LDR      r4,|L2.132|
00001c  b1b5              CBZ      r5,|L2.76|
00001e  4d1a              LDR      r5,|L2.136|
000020  6828              LDR      r0,[r5,#0]            ;90
000022  491a              LDR      r1,|L2.140|
000024  4008              ANDS     r0,r0,r1              ;90
000026  f1b05f00          CMP      r0,#0x20000000        ;90
00002a  d10f              BNE      |L2.76|
00002c  a018              ADR      r0,|L2.144|
00002e  f7fffffe          BL       xputs
000032  f2417170          MOV      r1,#0x1770            ;95
000036  2002              MOVS     r0,#2                 ;97
                  |L2.56|
000038  1c40              ADDS     r0,r0,#1              ;97
00003a  4288              CMP      r0,r1                 ;95
00003c  d3fc              BCC      |L2.56|
00003e  6868              LDR      r0,[r5,#4]
;;;101    			Jump_To_Application = (pFunction) JumpAddress;
000040  60a0              STR      r0,[r4,#8]  ; JumpAddress
;;;102    			/* Initialize user application's Stack Pointer */
;;;103    			__set_MSP(*(__IO uint32_t*) ApplicationAddress);
000042  6060              STR      r0,[r4,#4]  ; Jump_To_Application
000044  6829              LDR      r1,[r5,#0]
000046  f3818808          MSR      MSP,r1
;;;104    			Jump_To_Application();
00004a  4780              BLX      r0
                  |L2.76|
;;;105    		}
;;;106    	}
;;;107    
;;;108    	/* Enter DFU mode */
;;;109    	xputs("Enter DFU mode \r\n");
00004c  a017              ADR      r0,|L2.172|
00004e  f7fffffe          BL       xputs
;;;110    	DeviceState = STATE_dfuERROR;
;;;111    	DeviceStatus[0] = STATUS_ERRFIRMWARE;
000052  490c              LDR      r1,|L2.132|
000054  200a              MOVS     r0,#0xa               ;110
000056  310c              ADDS     r1,r1,#0xc
000058  7020              STRB     r0,[r4,#0]            ;110
00005a  7008              STRB     r0,[r1,#0]
;;;112    	DeviceStatus[4] = DeviceState;
00005c  7108              STRB     r0,[r1,#4]
;;;113    
;;;114    	Set_System();
00005e  f7fffffe          BL       Set_System
;;;115    	Set_USBClock();
000062  f7fffffe          BL       Set_USBClock
;;;116    	USB_Init();  
000066  f7fffffe          BL       USB_Init
                  |L2.106|
;;;117    
;;;118    	/* Main loop */
;;;119    	while (1)
00006a  e7fe              B        |L2.106|
;;;120    	{
;;;121    		
;;;122    	}
;;;123    }
;;;124    
                          ENDP

                  |L2.108|
00006c  44465520          DCB      "DFU button state:%d \r\n",0
000070  62757474
000074  6f6e2073
000078  74617465
00007c  3a256420
000080  0d0a00  
000083  00                DCB      0
                  |L2.132|
                          DCD      ||.data||
                  |L2.136|
                          DCD      0x08003000
                  |L2.140|
                          DCD      0x2ffe0000
                  |L2.144|
000090  4a756d70          DCB      "Jump to user application \r\n",0
000094  20746f20
000098  75736572
00009c  20617070
0000a0  6c696361
0000a4  74696f6e
0000a8  200d0a00
                  |L2.172|
0000ac  456e7465          DCB      "Enter DFU mode \r\n",0
0000b0  72204446
0000b4  55206d6f
0000b8  6465200d
0000bc  0a00    
0000be  00                DCB      0
0000bf  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  DeviceState
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  Jump_To_Application
                          DCD      0x00000000
                  JumpAddress
                          DCD      0x00000000
                  DeviceStatus
                          DCD      0x00000000
000010  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\User\\src\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_8f07eef2____REV16|
#line 114 "..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_8f07eef2____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_8f07eef2____REVSH|
#line 128
|__asm___6_main_c_8f07eef2____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
